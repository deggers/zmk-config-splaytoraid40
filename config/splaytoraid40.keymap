/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&caps_word {
   continue-list = <LSHIFT UNDERSCORE MINUS BSPC>; 
};

#define BASE   0
#define NUMPAD 1
#define NAV_APP 2

#define LOCKED 3

/ {

    chosen {
        zmk,matrix_transform = &five_column_transform;
    };

 macros {
    
        lambda_arrow: lambda_arrow {
            label = "lambda_arrow";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp MINUS &kp GREATER_THAN>
            ;
        };
        
    };

    //   ╔═════════════════════════════╗    ╔═════════════════════════════╗
    //   ║  0  |  1  |  2  |  3  |  4  ║    ║  5  |  6  |  7  |  8  |  9  ║
    //   ║ 10  | 11  | 12  | 13  | 14  ║    ║ 15  | 16  | 17  | 18  | 19  ║
    //   ║ 20  | 21  | 22  | 23  | 24  ║    ║ 25  | 26  | 27  | 28  | 29  ║
    //   ╚═══════════╗  30  | 31  | 32 ║    ║ 33  | 34  | 35 ╔════════════╝
    //               ╚═════════════════╝    ╚════════════════╝
    
    combos {
        compatible = "zmk,combos"; 

        tog_locked {
            timeout-ms = <50>;
            key-positions = <30 31 34 35>;
	    layers = <BASE LOCKED>;
            bindings = <&tog LOCKED>;
        };
	
        tog_app_nav {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&tog NAV_APP>;
        };	

        bootloader {
            timeout-ms = <50>;
            key-positions = <0 1 8 9>;
            bindings = <&bootloader>;
        };

        tog_numpad {
            timeout-ms = <50>;
            key-positions = <23 24>;
            bindings = <&tog NUMPAD>;
        };

        left_shift {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&sk LSHIFT>;
        };

        right_shift {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&sk LSHIFT>;
        };
 
        combo_lPar {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp LPAR>;
        };

        combo_lBrace {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp LEFT_BRACE>;
        };

        combo_arrow {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&lambda_arrow>;
        };

        combo_rBrace {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp RIGHT_BRACE>;
        };
	
        combo_rPar {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp RPAR>;
        };

        combo_del {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp DEL>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp TAB>;
        };
	
	combo_esc {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp ESC>;
        };
	
        combo_enter {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp RET>;
        };
 
        combo_ctrl_backspace {
            timeout-ms = <50>;
            key-positions = <16 17 18>;
            bindings = <&kp LC(BSPC)>;
        };

        combo_backspace {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp BSPC>;
        };
	
	combo_caps_word {
            timeout-ms = <50>;
            key-positions = <13 16>;
            bindings = <&caps_word>;
        };
	
    };

    behaviors {
        hm: home-row-mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <175>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        hs: home-row-shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_SHIFT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <175>;
            // quick-tap-ms = <125>;
            // global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        u_rgb_eff: u_rgb_eff {
            compatible = "zmk,behavior-mod-morph";
            label = "U_RGB_EFF";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_EFF>, <&rgb_ug RGB_EFR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_rgb_hui: u_rgb_hui {
            compatible = "zmk,behavior-mod-morph";
            label = "U_RGB_HUI";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_rgb_sai: u_rgb_sai {
            compatible = "zmk,behavior-mod-morph";
            label = "U_RGB_SAI";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_SAI>, <&rgb_ug RGB_SAD>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_rgb_bri: u_rgb_bri {
            compatible = "zmk,behavior-mod-morph";
            label = "U_RGB_BRI";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_ep_tog: u_ep_tog {
            compatible = "zmk,behavior-mod-morph";
            label = "U_EP_TOG";
            #binding-cells = <0>;
            bindings = <&ext_power EP_TOG>, <&ext_power EP_OFF>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
         
    behaviors {        
		hm_shift: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping_term_ms = <125>;
			quick_tap_ms = <200>;
			global-quick-tap;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
		
		hm_gui: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping_term_ms = <175>;
			quick_tap_ms = <200>;
			global-quick-tap;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
		
		gqt: global-quick-tap {
		    compatible = "zmk,behavior-hold-tap";
		    label = "GLOBAL_QUICK_TAP";
		    #binding-cells = <2>;
		    flavor = "tap-preferred";
		    tapping-term-ms = <175>;
		    quick-tap-ms = <125>;
		    global-quick-tap;
		    retro-tap;
		    bindings = <&kp>, <&kp>;
		};
		
    };
    
    keymap {
        compatible = "zmk,keymap";

        BASE {
            label = "Base";
            bindings = <
                &kp Q           &kp F        &kp C         &kp K               &kp X             &kp SPC  &kp W                &kp O         &kp U        &kp Z
                &hm_gui LGUI R  &gqt LALT S  &gqt LCTRL T  &hm_shift LSHIFT H  &kp D             &kp V    &hm_shift LSHIFT N   &gqt LCTRL A  &gqt LALT I  &hm_gui LGUI L 
                &kp Y           &kp B        &kp G         &kp P               &kp COMMA         &kp SPC  &kp M                &kp DOT       &kp J        &kp SEMI
                               &none  &kp SPACE                   &kp E  &none  
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        NUMPAD {
            label = "Numpad";
            bindings = <
                &none  &kp N9  &kp N8  &kp N7  &kp BSPC                &none &none &none &none &none  
                &kp N0  &kp N3  &kp N2  &kp N1  &kp RET                &none &none &none &none &none     
                &none  &kp N6  &kp N5  &kp N4  &kp COMMA               &none &none &none &none &none    
                               &none  &to BASE            &kp E  &reset  
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        NAV_APP {
            label = "Nav App";
            bindings = <
                &none  &none  &none            &none        &none                &none &none &none &none &none  
                &none  &none  &kp LA(LS(ESC))  &kp LA(ESC)  &none                &none &none &none &none &none   
                &none  &none  &none            &none        &none                &none &none &none &none &none    
                               &none  &to BASE            &none  &none  
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        LOCKED {
            label = "LOCKED";
            bindings = <
                &none  &none  &none  &none  &none                &none &none &none &none &none  
                &none  &none  &none  &none  &none                &none &none &none &none &none     
                &none  &none  &none  &none  &none               &none &none &none &none &none    
                               &none  &none            &none  &none  
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

    };
};
